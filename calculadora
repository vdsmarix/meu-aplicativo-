import 'package:flutter/material.dart';

void main() {
  runApp(const CalculadoraApp());
}

class CalculadoraApp extends StatelessWidget {
  const CalculadoraApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Calculadora',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: const CalculadoraPage(),
    );
  }
}

class CalculadoraPage extends StatefulWidget {
  const CalculadoraPage({super.key});

  @override
  State<CalculadoraPage> createState() => _CalculadoraPageState();
}

class _CalculadoraPageState extends State<CalculadoraPage> {
  final TextEditingController _controller = TextEditingController();
  double? _resultado;
  String? _operacao;

  void _calcular() {
    if (_controller.text.isEmpty) return;

    final double num1 = double.parse(_controller.text);
    double? num2;

    switch (_operacao) {
      case '+':
        num2 = double.parse(_controller.text);
        _resultado = num1 + num2;
        break;
      case '-':
        num2 = double.parse(_controller.text);
        _resultado = num1 - num2;
        break;
      case '*':
        num2 = double.parse(_controller.text);
        _resultado = num1 * num2;
        break;
      case '/':
        num2 = double.parse(_controller.text);
        _resultado = num1 / num2;
        break;
      default:
        _resultado = num1;
    }

    setState(() {});
  }

  void _limpar() {
    _controller.clear();
    _resultado = null;
    _operacao = null;
    setState(() {});
  }

  void _adicionarNumero(String numero) {
    _controller.text += numero;
    setState(() {});
  }

  void _adicionarOperacao(String operacao) {
    _operacao = operacao;
    _controller.text += operacao;
    setState(() {});
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Calculadora'),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          children: [
            TextField(
              controller: _controller,
              readOnly: true,
              decoration: const InputDecoration(
                border: OutlineInputBorder(),
              ),
            ),
            const SizedBox(height: 16),
            Text(
              _resultado != null ? 'Resultado: $_resultado' : '',
              style: const TextStyle(fontSize: 24),
            ),
            const SizedBox(height: 16),
            Row(
              mainAxisAlignment: MainAxisAlignment.spaceEvenly,
              children: [
                ElevatedButton(
                  onPressed: () => _adicionarNumero('7'),
                  child: const Text('7'),
                ),
                ElevatedButton(
                  onPressed: () => _adicionarNumero('8'),
                  child: const Text('8'),
                ),
                ElevatedButton(
                  onPressed: () => _adicionarNumero('9'),
                  child: const Text('9'),
                ),
                ElevatedButton(
                  onPressed: () => _adicionarOperacao('/'),
                  child: const Text('/'),
                ),
              ],
            ),
            Row(
              mainAxisAlignment: MainAxisAlignment.spaceEvenly,
              children: [
                ElevatedButton(
                  onPressed: () => _adicionarNumero('4'),
                  child: const Text('4'),
                ),
                ElevatedButton(
                  onPressed: () => _adicionarNumero('5'),
                  child: const Text('5'),
                ),
                ElevatedButton(
                  onPressed: () => _adicionarNumero('6'),
                  child: const Text('6'),
                ),
                ElevatedButton(
                  onPressed: () => _adicionarOperacao('*'),
                  child: const Text('*'),
                ),
              ],
            ),
            Row(
              mainAxisAlignment: MainAxisAlignment.spaceEvenly,
              children: [
                ElevatedButton(
                  onPressed: () => _adicionarNumero('1'),
                  child: const Text('1'),
                ),
                ElevatedButton(
                  onPressed: () => _adicionarNumero('2'),
                  child: const Text('2'),
                ),
                ElevatedButton(
                  onPressed: () => _adicionarNumero('3'),
                  child: const Text('3'),
                ),
                ElevatedButton(
                  onPressed: () => _adicionarOperacao('-'),
                  child: const Text('-'),
                ),
              ],
            ),
            Row(
              mainAxisAlignment: MainAxisAlignment.spaceEvenly,
              children: [
                ElevatedButton(
                  onPressed: () => _adicionarNumero('0'),
                  child: const Text('0'),
                ),
                ElevatedButton(
                  onPressed: _calcular,
                  child: const Text('='),
                ),
                ElevatedButton(
                  onPressed: _limpar,
                  child: const Text('C'),
                ),
                ElevatedButton(
                  onPressed: () => _adicionar